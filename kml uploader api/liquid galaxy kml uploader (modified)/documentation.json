{
  "swagger": "2.0",
  "info": {
    "description": "This is the KML API documentation",
    "version": "1.0.0",
    "title": "KML Server Uploader",
    "license": {
      "name": "MIT",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:5430",
  "basePath": "/KML",
  "tags": [
    {
      "name": "Builder",
      "description": "All building KML calls"
    },
    {
      "name": "Manage"
    },
    {
      "name": "View Sync"
    },
    {
      "name": "Fly To"
    },
    {
      "name": "System"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/builder/addphoto": {
      "post": {
        "tags": [
          "Builder"
        ],
        "summary": "Add image to the KML",
        "description": "Adds the given image at the given points in the KML",
        "operationId": "findPetsByStatus",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Add a image to the current KML. Needs to set the id, the name, and the four courners. finally set the image file",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Photo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/builder/addplacemark": {
      "post": {
        "tags": [
          "Builder"
        ],
        "summary": "Add a new placemark",
        "description": "Add a placemark into the current KML",
        "operationId": "addPlacemark",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The placemark was created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Placemark"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/builder/addpoint/{tourName}": {
      "post": {
        "tags": [
          "Builder"
        ],
        "summary": "Add a new point",
        "description": "Add a point to the current tour",
        "operationId": "addpoint",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The point was created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Placemark"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/builder/concatenate": {
      "post": {
        "tags": [
          "Builder"
        ],
        "summary": "Combines custom and current KMLs.",
        "description": "Add a custom KML to the current displayed KML.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The KML file",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KML"
            }
          }
        ],
        "tags": [
          "Builder"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/builder/Createtour": {
      "post": {
        "tags": [
          "Builder"
        ],
        "summary": "Create a tour",
        "description": "Creates a new tour",
        "operationId": "Createtour",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The tour was created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Placemark"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/builder/drawpath": {
      "post": {
        "tags": [
          "Builder"
        ],
        "summary": "Draw a path",
        "description": "Draws a path in the current kml",
        "operationId": "drawpath",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The path was drawn",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Placemark"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/builder/orbit": {
      "post": {
        "tags": [
          "Builder"
        ],
        "summary": "Create an orbit.",
        "description": "Creates an orbit with the given data",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "build a orbit, seting the longitude, latitude and range of the orbit. The name field will be the name of the tour, for later init it",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orbit"
            }
          }
        ]
      }
    },

    "/builder/editCoodPlacemark": {
      "put": {
        "tags": [
          "Builder"
        ],
        "summary": "Edits a placemark",
        "description": "Edits the placemark with the given id",
        "operationId": "editCoodPlacemark",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The placemark was created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Placemark"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },

    "/builder/deleteTag/{tag}/{id}": {
      "delete": {
        "tags": [
          "Builder"
        ],
        "summary": "Delete a tag",
        "description": "Deletes the tag with the given id",
        "parameters": [
          {
            "name": "tag",
            "in": "path",
            "description": "The tag name that you want to delete",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id of the tag to delete",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },



    "/manage/balloon/{id}/{newState}": {
      "get": {
        "tags": [
          "Manage"
        ],
        "summary": "Toggle a balloon marker",
        "description": "Changes the state of the balloon marker with the given id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the placemark that contains the balloon that will be edited",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "newState",
            "in": "path",
            "description": "set the new state of the balloon: 1 open, 0 close",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/manage/clean": {
      "get": {
        "summary": "Resets the master and slave KMLs",
        "description": "Clean the current visualitzation, and starts a new empty KML",
        "tags": [
          "Manage"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/manage/current": {
      "get": {
        "summary": "Return the current KML",
        "description": "Returns the id, name and path of the current KML",
        "tags": [
          "Manage"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/manage/initTour/{name}": {
      "get": {
        "tags": [
          "Manage"
        ],
        "summary": "Start a tour",
        "description": "Starts the tour with the given name",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name of the tour to init",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/manage/list": {
      "get": {
        "summary": "Get the list of KMLs",
        "description": "Gets the KML list, and their id's from the server",
        "tags": [
          "Manage"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/manage/stopTour": {
      "get": {
        "summary": "Stop the currently running tour",
        "description": "Stop the currently running tour",
        "tags": [
          "Manage"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },

    "/manage/new": {
      "post": {
        "summary": "Start a new KML",
        "description": "Starts a new kml with the given name",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "The name for the new KML",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "Manage"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/manage/upload": {
      "post": {
        "summary": "Upload a new KML to the system",
        "tags": [
          "Manage"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KML"
            }
          }
        ],
        "description": "Send the KML file to the server",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },

    "/manage/": {
      "put": {
        "summary": "Reload the list of KMLs",
        "description": "Check the KML folder and reload the list of KMLs",
        "tags": [
          "Manage"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },

    "/manage/{id}": {
      "put": {
        "summary": "Change the current KML",
        "description": "Change the current KML to the one with the given id",
        "tags": [
          "Manage"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the KML that you want to see",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "summary": "Delete a KML",
        "description": "Delete the KML with the given id",
        "tags": [
          "Manage"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the KML that you want to delete",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },



    "/system/{exec}": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Execute commands",
        "description": "Executes commands on the master machine",
        "parameters": [
          {
            "name": "exec",
            "in": "path",
            "description": "The bash command to execute",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },



    "/viewsync/master": {
      "get": {
        "tags": [
          "View Sync"
        ],
        "summary": "Get the current master KML",
        "description": "Returns the current master KML to be displayed in the liquid galaxy",
        "produces": [
          "application/vnd.google-earth.KML+xml"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/viewsync/slave": {
      "get": {
        "tags": [
          "View Sync"
        ],
        "summary": "Get the current slave KML",
        "description": "Returns the current slave KML to be displayed in the liquid galaxy",
        "produces": [
          "application/vnd.google-earth.KML+xml"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },



    "/flyto/{longitude}/{latitude}/{range}": {
      "post": {
        "tags": [
          "Fly To"
        ],
        "summary": "Fly to a position",
        "description": "Moves the liquid galaxy into the asked position",
        "operationId": "flyto",
        "parameters": [
          {
            "name": "longitude",
            "in": "path",
            "description": "the longitude of the camera",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "latitude",
            "in": "path",
            "description": "the latitude of the camera",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "range",
            "in": "path",
            "description": "The range of the camera",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    }
  },
  "definitions": {
    "Placemark": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "longitude": {
          "type": "integer",
          "format": "int32"
        },
        "latitude": {
          "type": "integer",
          "format": "int32"
        },
        "range": {
          "type": "integer",
          "format": "int32"
        },
        "altitudeMode": {
          "type": "string",
          "default": "relativeToGround",
          "enum": [
            "relativeToGround",
            "relativeToSea"
          ]
        },
        "description": {
          "type": "string",
          "description": "The bubble text"
        },
        "icon": {
          "type": "string",
          "description": "the path to the icon"
        },
        "scale": {
          "type": "integer",
          "description": "the scale of the icon"
        }
      }
    },
    "Photo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "fCorner": {
          "type": "string",
          "description": "The down-left, corner. The data need to be in [lon,lat,rang] format"
        },
        "sCorner": {
          "type": "string",
          "description": "The down-right, corner. The data need to be in [lon,lat,rang] format"
        },
        "tCorner": {
          "type": "string",
          "description": "The top-right, corner. The data need to be in [lon,lat,rang] format"
        },
        "ftCorner": {
          "type": "string",
          "description": "The top-left, corner. The data need to be in [lon,lat,rang] format"
        },
        "photo": {
          "type": "object",
          "format": "png, jpg"
        }
      }
    },
    "KML": {
      "type": "object",
      "properties": {
        "KML": {
          "type": "object",
          "format": "KML"
        }
      }
    },
    "Orbit": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "longitude": {
          "type": "string"
        },
        "latitude": {
          "type": "string"
        },
        "range": {
          "type": "string"
        }
      }
    }
  }
}
